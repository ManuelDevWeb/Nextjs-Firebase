** Configuración del Proyecto **

1. Crear proyecto: npx create-next-app producthuntwebnextjs

2. Comando para desarrollo: npm run dev

3. Hacer limpieza en el index.js, eliminar estilos, eliminar _app.js y la carpeta api.

4. Instalar las dependencias: npm i @emotion/core @emotion/styled babel-plugin-emotion @emotion/babel-preset-css-prop

5. Crear el archivo: .babelrc 

6. Crear la carpeta: components

7. Crear la carpeta: components/layout

8. Crear el componente: components/layout/Layout.js

** Header y CSS ** 

9. Crear el componente: components/layout/Header.js

10. Crear la carpeta: components/ui

11. Crear el componente: components/ui/Buscar.js

12. Crear el componente: components/layout/Navegacion.js

13. En Layout agregar el head con la configuración de la página.

14. Crear la carpeta: public/static

15. Crear la carpeta: public/static/css

16. Crear la hoja de estilos: public/static/css/app.css

17. Agregar la carpeta de imagenes a la carpeta: public/static

18. Crear el componente: components/ui/Boton.js

19. Crear la page: pages/crear-cuenta.js

20. Crear la page: pages/populares.js

21. Crear la page: pages/nuevo-producto.js

22. Crear la page: pages/login.js

23. Crear la page: pages/buscar.js

** Login y Crear Cuenta **

24. Empezar a trabajar en la page: pages/crear-cuenta.js

25. Crear el componente: components/ui/Formulario.js

26. Crear la carpeta: hooks

27. Crear el custom hook: hooks/useValidacion.js

28. Crear la carpeta: validacion

29. Crear las reglas de validacion para crear cuenta en el archivo: validacion/validarCrearCuenta.js

** Configuración FireBase **

30. Ir a la página de firebase y crear proyecto: - Nombre: Product Hunt
                                                 - Habilitar google analytics

31. Ir al apartado de Authentication: - Click en comenzar
                                      - Habilidar método correo electrónico/contraseña

32. Agregar firebase a la aplicación: - Click en el ícono de web
                                      - Sobrenombre: Product hunt
                                      - Instalar la dependencia: npm i firebase firebase-admin
                                      - Crear la carpeta: firebase
                                      - Crear el archivo y copiar la configuración: firebase/config.js

33. Creando el contexto de firebase: - Crear el archivo: firebase/context.js
                                     - Crear el archivo: pages/_app.js
                                     - Crear el archivo: firebase/firebase.js
                                     - Crear el archivo: firebase/index.js

** Login y Crear Cuenta **

34. Empezar a trabajar en la page: pages/login.js

35. Crear las reglas de validacion para iniciar sesión en el archivo: validacion/validarIniciarSesion.js

36. Crear el custom hook: hooks/useAutenticacion.js

** Creando Productos ** 

37. Empezar a trabajar en la page: pages/nuevo-producto.js

38. Crear las reglas de validacion para crear producto en el archivo: validacion/validarCrearProducto.js

39. Crear la database en firebase: - Click en Firestore Database
                                   - Seleccionar modo de prueba
                                   - Agregar configuración en el archivo de firebase

40. Habilitar firestore storage y subiendo imágenes: - Instalar: npm i react-firebase-file-uploader
                                                     - Implementar FileUploader en el componente nuevoProducto
                                                     - Ir a storage en la página de firebase
                                                     - Agregar configuración en el archivo de firebase

** Mostrando los Productos en la página principal **

41. Empezar a trabajar en la page: pages/index.js

42. Crear el componente: components/layout/DetallesProducto.js

43. Instalar la libreria para fechas: npm i date-fns

** Routing Dinámico y Páginas de Productos **

44. Crear la carpeta: pages/productos

45. Crear el componente: pages/productos/[id].js
                                     